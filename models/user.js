const mongoose = require('mongoose');
const uuid = require('uuid/v4');

// TODO:  Add some form of unique identifier to prevent multiple sign-ups.
//        Add testcases for this behavior when implemented.
var userSchema = new mongoose.Schema({ 
    // TODO:  The autogenerated _id field is sequential -- leaks information about size of our  userbase.
    //        Create and hand out a non-sequential identifier for production scenarios.
    verification_secret: {
        type: String,
        default: uuid,
    },
    is_verified: {
        type: Boolean,
        default: false
    },
    is_blocked: {
        type: Boolean,
        default: false 
    },
});

userSchema.methods.verify = function(secret) {
    var retval = false;
    if (secret === this.verification_secret) {
        this.is_verified = true;
        this.save();
        retval = true;
    }
    return retval;
};

var User = mongoose.model('User',  userSchema);

module.exports = {
    User: User
}